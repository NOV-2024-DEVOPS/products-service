name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - dev
      - test
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Main Code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Clone Infraestructura Repo
        run: git clone git@github.com:NOV-2024-DEVOPS/infraestructura.git

      - name: Load Variables from Organization Secrets
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}" >> $GITHUB_ENV

          # Configurar valores según la rama
          if [ "${{ github.ref_name }}" == "dev" ]; then
            echo "IMAGE_TAG=terraform-dev-repo:products-service-latest" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "test" ]; then
            echo "IMAGE_TAG=terraform-test-repo:products-service-latest" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "main" ]; then
            echo "IMAGE_TAG=terraform-main-repo:products-service-latest" >> $GITHUB_ENV
          fi

      # Paso para configurar SonarCloud
      - name: Set up SonarCloud
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Usa tu token secreto de SonarCloud

      # Ejecutar análisis de SonarCloud para el proyecto Java
      - name: SonarCloud Analysis
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=NOV-2024-DEVOPS_products-service\
            -Dsonar.organization=nov-2024-devops \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_TOKEN}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          docker build -t $IMAGE_TAG .
          docker tag $IMAGE_TAG $ECR_REPOSITORY/$IMAGE_TAG
          docker push $ECR_REPOSITORY/$IMAGE_TAG
